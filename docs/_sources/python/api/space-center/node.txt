
.. default-domain:: py
.. currentmodule:: SpaceCenter

Node
====

.. class:: Node

   Represents a maneuver node. Can be created using :meth:`Control.add_node`.

   .. attribute:: prograde

      The magnitude of the maneuver nodes delta-v in the prograde direction, in meters per second.

      :Property: Can be read or written

      :rtype: float


   .. attribute:: normal

      The magnitude of the maneuver nodes delta-v in the normal direction, in meters per second.

      :Property: Can be read or written

      :rtype: float


   .. attribute:: radial

      The magnitude of the maneuver nodes delta-v in the radial direction, in meters per second.

      :Property: Can be read or written

      :rtype: float


   .. attribute:: delta_v

      The delta-v of the maneuver node, in meters per second.

      :Property: Can be read or written

      :rtype: float

      .. note::

         Does not change when executing the maneuver node. See :attr:`Node.remaining_delta_v`.


   .. attribute:: remaining_delta_v

      Gets the remaining delta-v of the maneuver node, in meters per second. Changes as the node
      is executed. This is equivalent to the delta-v reported in-game.

      :Property: Read-only, cannot be set

      :rtype: float


   .. method:: burn_vector([reference_frame = None])

      Returns a vector whose direction the direction of the maneuver node burn, and whose magnitude
      is the delta-v of the burn in m/s.

      :param ReferenceFrame reference_frame:

      :rtype: tuple of (float, float, float)

      .. note::

         Does not change when executing the maneuver node. See :meth:`Node.remaining_burn_vector`.


   .. method:: remaining_burn_vector([reference_frame = None])

      Returns a vector whose direction the direction of the maneuver node burn, and whose magnitude
      is the delta-v of the burn in m/s. The direction and magnitude change as the burn is executed.

      :param ReferenceFrame reference_frame:

      :rtype: tuple of (float, float, float)


   .. attribute:: ut

      The universal time at which the maneuver will occur, in seconds.

      :Property: Can be read or written

      :rtype: float


   .. attribute:: time_to

      The time until the maneuver node will be encountered, in seconds.

      :Property: Read-only, cannot be set

      :rtype: float


   .. attribute:: orbit

      The orbit that results from executing the maneuver node.

      :Property: Read-only, cannot be set

      :rtype: :class:`Orbit`


   .. method:: remove()

      Removes the maneuver node.


   .. attribute:: reference_frame

      Gets the reference frame that is fixed relative to the maneuver node's burn.

      * The origin is at the position of the maneuver node.
      * The y-axis points in the direction of the burn.
      * The x-axis and z-axis point in arbitrary but fixed directions.

      :Property: Read-only, cannot be set

      :rtype: :class:`ReferenceFrame`


   .. attribute:: orbital_reference_frame

      Gets the reference frame that is fixed relative to the maneuver node, and
      orientated with the orbital prograde/normal/radial directions of the
      original orbit at the maneuver node's position.

      * The origin is at the position of the maneuver node.
      * The x-axis points in the orbital anti-radial direction of the original
        orbit, at the position of the maneuver node.
      * The y-axis points in the orbital prograde direction of the original
        orbit, at the position of the maneuver node.
      * The z-axis points in the orbital normal direction of the original orbit,
        at the position of the maneuver node.

      :Property: Read-only, cannot be set

      :rtype: :class:`ReferenceFrame`


   .. method:: position(reference_frame)

      Returns the position vector of the maneuver node in the given reference frame.

      :param ReferenceFrame reference_frame:

      :rtype: tuple of (float, float, float)


   .. method:: direction(reference_frame)

      Returns the unit direction vector of the maneuver nodes burn in the given reference frame.

      :param ReferenceFrame reference_frame:

      :rtype: tuple of (float, float, float)



